<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.stevesouza</groupId>
	<artifactId>camel_experiment6_soap</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>camel_experiment6_soap</name>
	<description>Camel, Spring boot and soap web services</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<!-- note hawt io doesn't currently work with spring 2.1 so using the previous version -->
		<!--<version>2.1.0.RELEASE</version>-->
		<version>2.0.6.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>



    <properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<camel.version>2.23.1</camel.version>
        <random-beans.version>3.7.0</random-beans.version>
        <swagger.version>2.9.2</swagger.version>
		<automon.version>1.0.2</automon.version>
		<mojo.ajc.version>1.11</mojo.ajc.version>
	</properties>


    <!-- The following camel maven bom allows us not to have to specify the version in the various camel dependencies -->
    <dependencyManagement>
        <dependencies>
            <!-- Camel BOM -->
            <!--<dependency>-->
                <!--<groupId>org.apache.camel</groupId>-->
                <!--<artifactId>camel-parent</artifactId>-->
                <!--<version>${camel.version}</version>-->
                <!--<scope>import</scope>-->
                <!--<type>pom</type>-->
            <!--</dependency>-->
        </dependencies>
    </dependencyManagement>

	<dependencies>
		<!-- START STANDARD SPRING BOOT LIBRARIES-->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!--<dependency>-->
			<!--<groupId>org.springframework.kafka</groupId>-->
			<!--<artifactId>spring-kafka</artifactId>-->
		<!--</dependency>-->

        <!--<dependency>-->
            <!--<groupId>org.springframework.boot</groupId>-->
            <!--<artifactId>spring-boot-starter-activemq</artifactId>-->
        <!--</dependency>-->


		<!-- spring metrics and health endpoints-->

		<dependency>
			<groupId>io.hawt</groupId>
			<artifactId>hawtio-springboot</artifactId>
			<version>2.3.0</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>



		<!-- END STANDARD SPRING BOOT LIBRARIES-->



		<!-- START camel libraries-->
		<!--always use -starter with spring boot camel p 259 2nd edition-->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-spring-boot-starter</artifactId>
            <version>${camel.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-spring-javaconfig-starter</artifactId>
            <version>${camel.version}</version>
        </dependency>

		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-metrics-starter</artifactId>
            <version>${camel.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-jackson-starter</artifactId>
            <version>${camel.version}</version>
		</dependency>

        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-test-spring</artifactId>
            <version>${camel.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-cxf-starter</artifactId>
            <version>${camel.version}</version>
        </dependency>

        <!--<dependency>-->
            <!--<groupId>org.apache.camel</groupId>-->
            <!--<artifactId>camel-jms-starter</artifactId>-->
            <!--<version>${camel.version}</version>-->
        <!--</dependency>-->

		<!--This allows us to use the activemq component in routes instead of jms.  According to the camel site-->
		<!--it is more efficient.-->
		<!--<dependency>-->
			<!--<groupId>org.apache.activemq</groupId>-->
			<!--<artifactId>activemq-camel</artifactId>-->
			<!--<version>5.15.6</version>-->
		<!--</dependency>-->

		<!--<dependency>-->
			<!--<groupId>org.apache.camel</groupId>-->
			<!--<artifactId>camel-kafka-starter</artifactId>-->
			<!--<version>${camel.version}</version>-->
		<!--</dependency>-->
		<!-- xml processing -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-xstream</artifactId>
            <version>${camel.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-jacksonxml</artifactId>
            <version>${camel.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-xmljson</artifactId>
            <version>${camel.version}</version>
		</dependency>

		<!-- xml validation -->
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-msv</artifactId>
            <version>${camel.version}</version>
		</dependency>
		<!-- END camel libraries-->



		<!-- START other standard libraries of common use-->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

        <!-- easily generate test data even with complex object webs.  good for actual code when stubbing a controller -->
        <dependency>
            <groupId>io.github.benas</groupId>
            <artifactId>random-beans</artifactId>
            <version>${random-beans.version}</version>
        </dependency>

        <dependency>
            <groupId>io.github.benas</groupId>
            <artifactId>random-beans-validation</artifactId>
            <version>${random-beans.version}</version>
        </dependency>

		<!--<dependency>-->
			<!--<groupId>org.apache.activemq</groupId>-->
			<!--<artifactId>activemq-broker</artifactId>-->
		<!--</dependency>-->

		<!--<dependency>-->
			<!--<groupId>org.apache.activemq</groupId>-->
			<!--<artifactId>activemq-broker</artifactId>-->
		<!--</dependency>-->
        <!-- swagger -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
            <version>${swagger.version}</version>
		</dependency>

        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>${swagger.version}</version>
        </dependency>
		<!-- END other standard libraries of common use-->

		<!-- **** START XML processing libraries-->

		<!--xml processing-->
		<dependency>
			<groupId>xom</groupId>
			<artifactId>xom</artifactId>
			<version>1.2.5</version>
		</dependency>

		<!-- END XML processing libraries-->

        <!--automon libraries for BTW - build time weaving i.e. monitoring in generated classes-->
		<dependency>
			<groupId>org.automon</groupId>
			<artifactId>automon</artifactId>
			<version>${automon.version}</version>
		</dependency>

		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${aspectj.version}</version>
		</dependency>

		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${aspectj.version}</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>aspectj-maven-plugin</artifactId>
				<version>${mojo.ajc.version}</version>

				<executions>
					<execution>
						<goals>
							<goal>compile</goal>       <!-- use this goal to weave all your main classes -->
							<goal>test-compile</goal>  <!-- use this goal to weave all your test classes -->
						</goals>
					</execution>
				</executions>
				<configuration>
					<!-- because this project has no sources it is required that forceAjcCompile is true.
                    Alternatively having one dummy class works. -->
					<source>${java.version}</source>
					<target>${java.version}</target>
					<complianceLevel>${java.version}</complianceLevel>
				</configuration>
			</plugin>


			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.28.0</version>
                <configuration>
                    <images>
                        <image>
                            <!--g=groupid, a=artifact, l=version-->
                            <name>%g/%a:%l</name>
                            <build>
                                <from>openjdk:8</from>
                                <assembly>
                                    <descriptorRef>artifact</descriptorRef>
                                </assembly>
                                <!--override application.properties when running app from a container-->
                                <env>
                                    <spring.data.mongodb.host>172.17.0.3</spring.data.mongodb.host>
                                </env>
                                <cmd>
                                    java -jar maven/${project.artifactId}-${project.version}.jar
                                </cmd>
                            </build>
                        </image>
                    </images>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-codegen-plugin</artifactId>
                <version>3.2.8</version>
                <executions>
                    <execution>
                        <id>generate-sources</id>
                        <phase>generate-sources</phase>
                        <configuration>
                            <wsdlOptions>
                                <wsdlOption>
                                    <wsdl>src/main/resources/service.wsdl</wsdl>
                                </wsdlOption>
                            </wsdlOptions>
                        </configuration>
                        <goals>
                            <goal>wsdl2java</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

		</plugins>
	</build>


</project>
